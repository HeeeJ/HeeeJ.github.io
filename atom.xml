<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>阿橘的技术波</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2020-05-06T02:40:55.265Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jiafang He 何佳芳</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>从零开始搭建Hexo+Github个人博客</title>
    <link href="http://yoursite.com/2020/05/06/Hexo-Building/"/>
    <id>http://yoursite.com/2020/05/06/Hexo-Building/</id>
    <published>2020-05-06T02:23:49.000Z</published>
    <updated>2020-05-06T02:40:55.265Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言-amp-准备工作"><a href="#前言-amp-准备工作" class="headerlink" title="前言&amp;准备工作"></a>前言&amp;准备工作</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>没有技术波的程序员不是好产品经理。虽然话是这么说，但我认为个人博客的使用者不应该局限于职业，每个人都会需要一个空间来记录生活工作中的问题吧，所以欢迎大家阅读本文。<br><strong>本文提供的安装方法简单，搭建过程小白也可以，大家要有信心！</strong></p><p>基于GitHub的优点：<strong>免费！</strong></p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>拥有一个Github账号。<br> 如果没有那么<a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">点击这里</a>即可注册.</li><li>安装node.js，<br> 如果你在国内不出意外你会发现官网龟速下载，那么请<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">点击这个！</a>光速下载你值得拥有</li><li>下载安装<a href="https://npm.taobao.org/mirrors/git-for-windows/" target="_blank" rel="noopener">git for windows</a>同上。</li><li>了解git，npm相关基础知识</li></ol><h2 id="搭建github博客"><a href="#搭建github博客" class="headerlink" title="搭建github博客"></a>搭建github博客</h2><h3 id="新建名为-“用户名-github-io”的仓库"><a href="#新建名为-“用户名-github-io”的仓库" class="headerlink" title="新建名为 “用户名.github.io”的仓库"></a>新建名为 “用户名.github.io”的仓库</h3><p>比如说，如果你的github用户名是test，那么你就新建 <code>test.github.io</code> 的仓库，一定要这样哦。（在github个人界面点击下图右上角的<strong>绿色按钮</strong>的New就可以新建仓库啦~）<br>将来你的网站访问地址就是 <a href="http://test.github.io" target="_blank" rel="noopener">http://test.github.io</a> 了，是不是很方便？</p><p>创建成功后，默认会在你这个仓库里生成一些示例页面，以后你的网站所有代码都是放在这个仓库里啦~ ！<strong>（下图就是我创建好的博客仓库啦）</strong><br><img src="https://img-blog.csdnimg.cn/20200505164959655.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70" alt="这里就是我创建好的仓库啦"></p><h2 id="配置SSH"><a href="#配置SSH" class="headerlink" title="配置SSH"></a>配置SSH</h2><h3 id="获取并配置ssh-key"><a href="#获取并配置ssh-key" class="headerlink" title="获取并配置ssh key"></a>获取并配置ssh key</h3><p>简单理解一下什么是ssh呢？ssh相当于链接本地和服务器的密码，配置ssh key之后，本地才拥有github的权限，我们才能把本地的更改上传到github上，才可以更新你的博客。</p><ol><li><p>之前成功安装了git，那么我们在电脑桌面<strong>右键，点击 Git Bash Here</strong>，并在弹出的窗口输入指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd ~/.ssh #检查本机已存在的ssh密钥</span><br></pre></td></tr></table></figure><p>如果提示：No such file or directory 说明你是第一次使用git本机不存在ssh key，执行下面指令生成ssh key</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C "邮件地址" #Github注册的邮箱地址</span><br></pre></td></tr></table></figure><p>然后<strong>连续3次回车</strong>，最终会生成一个文件在用户目录下，打开用户目录，找到==.ssh\id_rsa.pub==文件，记事本打开并复制里面的内容</p></li><li><p>打开Github右上角个人头像下拉菜单中选择<br>Setting –&gt;  SSH and GPG keys –&gt; New SSH key：</p></li></ol><p><img src="https://img-blog.csdnimg.cn/2020050608160185.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20200506081813735.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>之后点击Add SSH key。</p><p>到此为止我们应该成功的配置了ssh key，建立了本地与Github直接的连接。下面我们就来检验一下配置是否成功。</p><h3 id="测试ssh-key是否配置成功"><a href="#测试ssh-key是否配置成功" class="headerlink" title="测试ssh key是否配置成功"></a>测试ssh key是否配置成功</h3><p>回到刚才的git bash窗口，输入指令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com #这里直接复制，不需要改邮箱地址</span><br></pre></td></tr></table></figure><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入==yes==，然后会看到成功提示~</p><h3 id="本地配置"><a href="#本地配置" class="headerlink" title="本地配置"></a>本地配置</h3><p>配置好ssh key 之后我们还需要简单的配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "Github用户名"</span><br><span class="line">git config --global user.email "Github注册邮箱"</span><br></pre></td></tr></table></figure><p>这一步的原因是：Git是分布式版本控制系统，所以，每个机器都必须自报家门：你的名字和Email地址。</p><h2 id="Hexo"><a href="#Hexo" class="headerlink" title="Hexo"></a>Hexo</h2><h3 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h3><p>Hexo是一个简单、快速、强大的基于 Github Pages 的<strong>博客发布工具</strong>，支持Markdown格式，有众多优秀插件和主题。</p><p><a href="http://hexo.io" target="_blank" rel="noopener">Hexo官网</a><br><a href="https://github.com/hexojs/hexo" target="_blank" rel="noopener">Hexo github</a></p><p>关于Hexo和Github 搭建博客原理，我们这里就不细究了，感兴趣的欢迎大家自行百度。</p><h3 id="安装及博客初始化"><a href="#安装及博客初始化" class="headerlink" title="安装及博客初始化"></a>安装及博客初始化</h3><p>在Git Bash输入</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><p>等待下载完毕，此时我们在电脑某个地方新建一个文件夹，这个文件夹将存放我们博客的代码，记住位置不要乱放哦！<br>然后我们<strong>在这个文件夹窗口右键Git Bash</strong>，或者使用<code>cd</code>命令到达该文件夹。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /d/hexo/</span><br></pre></td></tr></table></figure><p>例如我在D盘创建了名为Hexo的文件夹，此时我的bash窗口如图<br><img src="https://img-blog.csdnimg.cn/20200506083737432.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后开始初始化我们的博客，简单来说就是下载一个最基本的Hexo博客</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure><p>执行这个语句之后，我们会在刚刚的文件夹里找到Hexo下载的文件，目录结构如图：（如果你跟我略有不同请不要担心）<br><img src="https://img-blog.csdnimg.cn/20200506084214826.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>接下来我们就可以在本地启动自己的博客啦！</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>打开浏览器访问 <strong><a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a></strong> 即可看到内容，如果浏览器碰瓷一直转圈那应该碰到了端口占用的问题，我们只需要百度一下解决掉就好~</p><p>然后我们就看到了自己的博客啦！<br><img src="https://img-blog.csdnimg.cn/20200506084806562.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>到这里我们已经成功了一大半了！</p><h3 id="博客主题"><a href="#博客主题" class="headerlink" title="博客主题"></a>博客主题</h3><p><a href="https://hexo.io/themes/" target="_blank" rel="noopener">Hexo主题官网</a><br>自己的博客当然要搞得漂漂亮亮的~<br>我先后用过Next，Melody，Butterfly~<br>我们这里以Butterfly为例, 来到刚才的博客目录文件夹下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd /d/hexo</span><br><span class="line">git clone -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/Butterfly</span><br></pre></td></tr></table></figure><p>下载后的主题都保存在themes文件夹下<br><img src="https://img-blog.csdnimg.cn/20200506085306553.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80NzMyOTYyOQ==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>然后我们随便用一个编译器打开<code>_config.yml</code>文件，修改<code>_config.yml</code>中的<code>theme: landscape</code>改为<code>theme: butterfly</code>，然后重新执行hexo g来重新生成。</p><p>如果出现一些莫名其妙的问题，可以先执行hexo clean来清理一下public的内容，然后再来重新生成和发布。</p><p><strong>注意！_config.yml有两个（或多个），一个在主文件夹下，称为全局配置文件，另外，每一个主题文件夹下还有一个_config.yml文件，这里我们修改的是全局配置！</strong></p><p>此时我们运行<code>hexo g</code>,<code>hexo s</code>,重新访问<a href="http://localhost:4000，就可以看到我们修改之后的博客啦！">http://localhost:4000，就可以看到我们修改之后的博客啦！</a></p><h2 id="上传"><a href="#上传" class="headerlink" title="上传"></a>上传</h2><h3 id="上传之前的配置"><a href="#上传之前的配置" class="headerlink" title="上传之前的配置"></a>上传之前的配置</h3><p>好了我们就剩最后一步，即将本地博客上传至github，然后我们就可以通过<code>用户名.github.io</code>访问自己的博客了~</p><p>在刚才的<code>_config.yml</code>文件夹中找到<code>deploy</code>，修改配置如下：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repository:</span> <span class="string">git@github.com:HeeeJ/HeeeJ.github.io.git</span> <span class="comment">#修改为自己的用户名</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>在 git bash 中输入指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git</span><br></pre></td></tr></table></figure><h3 id="上传！"><a href="#上传！" class="headerlink" title="上传！"></a>上传！</h3><p>最后！只需要在Git Bash中输入<code>hexo d</code>，就可以将博客上传到Github啦~<br>访问 用户名.github.io就可以看到自己的网站啦！</p><h2 id="结束语"><a href="#结束语" class="headerlink" title="结束语"></a>结束语</h2><p>这里是<a href="heeej.github.io">我自己的Github博客~</a>欢迎来访<br>这个系列还会更新下去的！我是个小白，与其说是教程，不如说是记录自己的折腾生活。<br>希望你成功的搭建了自己的博客，感谢阅读~<br>第一次写文章，看不明白或者过程出现什么问题都可以联系我，我会尽量帮忙的！有人可能会问，那么多博客网站为什么要自己搭呢？其实我就是爱折腾，哈哈哈相信看到这里的你和我一样。一起加油！祝顺利！</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;前言-amp-准备工作&quot;&gt;&lt;a href=&quot;#前言-amp-准备工作&quot; class=&quot;headerlink&quot; title=&quot;前言&amp;amp;准备工作&quot;&gt;&lt;/a&gt;前言&amp;amp;准备工作&lt;/h2&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/categories/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="Markdown" scheme="http://yoursite.com/tags/Markdown/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2020/05/05/hello-world/"/>
    <id>http://yoursite.com/2020/05/05/hello-world/</id>
    <published>2020-05-05T02:22:04.671Z</published>
    <updated>2020-05-05T02:22:04.671Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
    
  </entry>
  
</feed>
